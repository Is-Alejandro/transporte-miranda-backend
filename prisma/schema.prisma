// 👇 Prisma Client Generator
generator client {
  provider = "prisma-client-js"
}

// 👇 Conexión a la base de datos PostgreSQL
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//
// ======================================
// 📦 Modelo para la tabla Ruta
// ======================================
model Ruta {
  id                 Int      @id @default(autoincrement())
  origen             String
  destino            String
  distanciaKm        Float
  duracionEstimada   Int
  estado             Boolean  @default(true)

  viajes             Viaje[] // Relación: una Ruta tiene muchos Viajes
}

//
// ======================================
// 📦 Modelo para la tabla Bus
// ======================================
model Bus {
  id              Int      @id @default(autoincrement())
  placa           String   @unique
  marca           String
  modelo          String
  tipoBus         String
  añoFabricacion  Int
  capacidadTotal  Int
  estadoOperativo Boolean  @default(true)

  viajes          Viaje[]      // Relación: un Bus tiene muchos Viajes
  asientos        Asiento[]    // Relación: un Bus tiene muchos Asientos
}

//
// ======================================
// 📦 Modelo para la tabla Viaje
// ======================================
model Viaje {
  id          Int             @id @default(autoincrement())
  idRuta      Int
  idBus       Int
  fecha       DateTime
  horaSalida  String
  horaLlegada String

  ruta        Ruta            @relation(fields: [idRuta], references: [id])
  bus         Bus             @relation(fields: [idBus], references: [id])

  // 🔥 Relación inversa con ViajeAsiento
  asientosViaje ViajeAsiento[]
}

//
// ======================================
// 📦 Modelo para la tabla Asiento
// ======================================
model Asiento {
  id        Int             @id @default(autoincrement())
  idBus     Int
  numero    Int

  bus       Bus             @relation(fields: [idBus], references: [id])

  // 🔥 Relación inversa con ViajeAsiento
  viajesAsiento ViajeAsiento[]
}

//
// ======================================
// 📦 Modelo para la tabla ViajeAsiento
// ======================================
model ViajeAsiento {
  id        Int      @id @default(autoincrement())
  idViaje   Int
  idAsiento Int
  estado    String   @default("disponible") // disponible | reservado | ocupado

  viaje     Viaje    @relation(fields: [idViaje], references: [id])
  asiento   Asiento  @relation(fields: [idAsiento], references: [id])
}
